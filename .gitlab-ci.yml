variables:
  APP: gitlab-app-test
  TAG: latest
  ECR: 632296647497.dkr.ecr.eu-central-1.amazonaws.com
  ECR_IMAGE: "${ECR}/${APP}:${TAG}"
  CLUSTER_NAME: gitlab-app-cluster-test
  SERVICE_NAME: gitlab-app-service-test
  TASK_FAMILY: gitlab-app-task-test

image: docker:latest
services:
  - docker:dind

before_script:
  - apk add --no-cache py-pip jq
  - pip install awscli
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set region $AWS_DEFAULT_REGION
  - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR

stages:
  - build
  - test
  - image
  - deploy

maven-build:
  stage: build
  image: maven:3.6-jdk-8-alpine
  before_script:
    - cd app
  script:
    - mvn clean package -B
  artifacts:
    paths:
      - app/target/*.jar
  when: manual
  only:
    - main
  tags:
    - dev

maven-test-1:
  stage: test
  image: maven:3.6-jdk-8-alpine
  before_script:
    - cd app
  script:
    - mvn -Dtest=AppTest#test1 test
  when: manual
  only:
    - main
  tags:
    - dev

maven-test-2:
  stage: test
  image: maven:3.6-jdk-8-alpine
  before_script:
    - cd app
  script:
    - mvn -Dtest=AppTest#test2 test
  when: manual
  only:
    - main
  tags:
    - dev

maven-test-3:
  stage: test
  image: maven:3.6-jdk-8-alpine
  before_script:
    - cd app
  script:
    - mvn -Dtest=AppTest#test3 test
  when: manual
  only:
    - main
  tags:
    - dev

image-build:
  stage: image
  script:
    - docker build -t "${ECR_IMAGE}" .
  when: manual
  only:
    - main
  tags:
    - dev

image-push:
  stage: image
  script:
    - docker push "${ECR_IMAGE}"
  dependencies:
    - image-build  
  when: manual
  only:
    - main
  tags:
    - dev

aws-deploy:
  stage: deploy
  script:
    # - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
    - sh new-task.sh
  when: manual
  only:
    - main
  tags:
    - dev